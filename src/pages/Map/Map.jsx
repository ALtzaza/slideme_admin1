import React from 'react';
import { useParams, Link } from 'react-router-dom';
import { orders } from '../../Data/order'; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Order
import './Map.css';

function Map() {
  const { id } = useParams();
  const order = orders.find(order => order.id === parseInt(id));

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏û‡∏¥‡∏Å‡∏±‡∏î
  function getDistance(lat1, lon1, lat2, lon2) {
    const R = 6371; // ‡∏£‡∏±‡∏®‡∏°‡∏µ‡πÇ‡∏•‡∏Å‡πÉ‡∏ô‡∏Å‡∏¥‡πÇ‡∏•‡πÄ‡∏°‡∏ï‡∏£
    const dLat = (lat2 - lat1) * (Math.PI / 180);
    const dLon = (lon2 - lon1) * (Math.PI / 180);

    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
              Math.cos(lat1 * (Math.PI / 180)) * Math.cos(lat2 * (Math.PI / 180)) *
              Math.sin(dLon / 2) * Math.sin(dLon / 2);
    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
    const distance = R * c; // ‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡πÉ‡∏ô‡∏Å‡∏¥‡πÇ‡∏•‡πÄ‡∏°‡∏ï‡∏£

    return distance; // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏¥‡πÇ‡∏•‡πÄ‡∏°‡∏ï‡∏£
  }

  if (!order) {
    return (
      <div className="pages-container">
        <div className="hader-container">
          <span className="hader-text"><h1><strong>MAP</strong></h1></span>
          <div className="user-icon">üë§</div>
        </div>
        <div className="error-message">
          <h2>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</h2>
          <Link to="/checkorder">
            <button className="ex-btn">‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</button>
          </Link>
        </div>
      </div>
    );
  }

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏à‡∏∏‡∏î‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á
  const startLat = order.location.start.latitude;
  const startLon = order.location.start.longitude;
  const endLat = order.location.end.latitude;
  const endLon = order.location.end.longitude;
  const distance = getDistance(startLat, startLon, endLat, endLon);

  return (
    <div className="pages-container">
      <div className="hader-container">
        <span className="hader-text"><h1><strong>MAP</strong></h1></span>
        <div className="user-icon">üë§</div>
      </div>

      <div className="dashboard-box">
        <div className="dashboard-map">
          <iframe
            src={`https://www.google.com/maps?q=${startLat},${startLon}&output=embed`}
            width="100%"
            height="450"
            allowFullScreen=""
            loading="lazy"
            referrerPolicy="no-referrer-when-downgrade"
            title="Interactive Map"
          ></iframe>
        </div>
        <div className="dashboard-details-header">
          <h5><strong>‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á</strong></h5>
        </div>
        <div className="dashboard-details">
          <span className='details-text'>
            <p><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:</strong> {order.date}</p>
            <p><strong>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:</strong> {order.customerName}</p>
            <p><strong>‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô - ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á:</strong> {order.startEnd}</p>
            <p><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</strong> {order.status}</p>
           
            <p>
              <strong>‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á :</strong> {distance.toFixed(2)} ‡∏Å‡∏°.  {/* ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì */}
            </p>
            <p>
              <strong>‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á :</strong> ‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì {order.estimatedTime} ‡∏ô‡∏≤‡∏ó‡∏µ
            </p>
           
          </span>
        </div>
        <div className="action1-buttons">
         
          <Link to="/checkorder">
            <button className="ex-btn">‡∏≠‡∏≠‡∏Å</button>
          </Link>
        </div>
      </div>
    </div>
  );
}

export default Map;
